@model IEnumerable<CartItem>
@using System.Globalization
@{
    ViewData["Title"] = "سلة التسوق";
    var culture = new CultureInfo("ar-EG");
    decimal total = Model.Any() ? Model.Sum(item => item.Quantity * item.Product.Price) : 0;
}

<link href="~/css/cart-page.css" rel="stylesheet" asp-append-version="true" />

<div class="cart-page section-bg">
    <div class="container" data-aos="fade-up">
        <div class="section-header">
            <h2>سلة التسوق الخاصة بك</h2>
        </div>
        <div class="row gy-5">
            <div class="col-lg-8" id="cart-items-container">
                @if (Model.Any())
                {
                    foreach (var item in Model)
                    {
                        <div class="cart-item" id="cart-item-@item.Id">
                            <div class="cart-item-img me-4">
                                <img src="@(string.IsNullOrEmpty(item.Product.ImageUrl) ? "https://placehold.co/200x200/F4E1E6/A64B63?text=Item" : item.Product.ImageUrl)" alt="@item.Product.Name">
                            </div>
                            <div class="cart-item-details">
                                <h5>@item.Product.Name</h5>
                                <p class="text-dark mb-1 numeric-value">السعر: @item.Product.Price.ToString("C", culture)</p>
                            </div>
                            <div class="mx-4">
                                <div class="quantity-controls">
                                    <button class="quantity-btn quantity-minus" data-item-id="@item.Id">-</button>
                                    <input type="text" class="quantity-input" value="@item.Quantity" readonly>
                                    <button class="quantity-btn quantity-plus" data-item-id="@item.Id">+</button>
                                </div>
                            </div>
                            <h5 class="mx-4 item-total numeric-value" id="item-total-@item.Id">@((item.Quantity * item.Product.Price).ToString("C", culture))</h5>
                            <button class="btn btn-sm btn-remove" data-item-id="@item.Id" title="إزالة المنتج">&times;</button>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-5" id="empty-cart-message">
                        <p class="lead">سلتك فارغة حالياً.</p>
                        <a asp-controller="Home" asp-action="Index" class="btn-main">ابدأ التسوق</a>
                    </div>
                }
            </div>
            <div class="col-lg-4">
                <div class="cart-summary">
                    <h4>ملخص الطلب</h4>
                    <hr>
                    <div class="d-flex justify-content-between mb-3">
                        <span>الإجمالي الفرعي</span>
                        <span id="cart-subtotal" class="numeric-value">@total.ToString("C", culture)</span>
                    </div>
                    <div class="d-flex justify-content-between fw-bold h5">
                        <span>الإجمالي النهائي</span>
                        <span id="cart-total" class="numeric-value">@total.ToString("C", culture)</span>
                    </div>
                    <div class="d-grid mt-4">
                        <a asp-controller="Checkout" asp-action="Index" class="btn-main text-center" id="checkout-btn" style="@(Model.Any() ? "" : "display:none;")">التقدم لإتمام الطلب</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // --- Helper Functions ---
            const toEasternArabicNumerals = (str) => {
                if (str === null || str === undefined) return '';
                let numStr = String(str);
                const arabicNumerals = ['٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'];
                return numStr.replace(/[0-9]/g, w => arabicNumerals[+w]).replace('.', '٫');
            };

            const currencyFormatter = new Intl.NumberFormat('ar-EG-u-nu-arab', {
                style: 'currency',
                currency: 'EGP',
                minimumFractionDigits: 2
            });

            function convertAllNumbers() {
                $('.numeric-value, .quantity-input').each(function() {
                    if($(this).is('input')) {
                        $(this).val(toEasternArabicNumerals($(this).val()));
                    } else {
                        $(this).text(toEasternArabicNumerals($(this).text()));
                    }
                });
            }

            // --- Initial Conversion on Page Load ---
            convertAllNumbers();

            // --- Update Cart Logic ---
            function updateCartItem(itemId, newQuantity) {
                $.post('/Cart/UpdateQuantity', { id: itemId, quantity: newQuantity }, function(response) {
                    if (response.success) {
                        if (response.itemRemoved) {
                            $('#cart-item-' + itemId).fadeOut(300, function() {
                                $(this).remove();
                                if ($('.cart-item').length === 0) {
                                     $('#checkout-btn').fadeOut();
                                     $('#cart-items-container').html('<div class="text-center py-5" id="empty-cart-message"><p class="lead">سلتك فارغة حالياً.</p><a href="/Home/Index" class="btn-main">ابدأ التسوق</a></div>');
                                }
                            });
                        } else {
                            $('#cart-item-' + itemId).find('.quantity-input').val(toEasternArabicNumerals(response.newQuantity));
                            $('#item-total-' + itemId).text(currencyFormatter.format(response.itemTotal));
                        }

                        $('#cart-subtotal').text(currencyFormatter.format(response.cartTotal));
                        $('#cart-total').text(currencyFormatter.format(response.cartTotal));
                        $('#cart-badge').text(toEasternArabicNumerals(response.cartCount));

                    } else {
                        // This function needs to be defined globally or passed in
                        showToast(response.message, 'error');
                    }
                });
            }

            $('#cart-items-container').on('click', '.quantity-plus', function() {
                var itemId = $(this).data('item-id');
                var input = $(this).siblings('.quantity-input');
                // The input value is in Arabic, so we need to convert it back to process
                var currentQuantity = parseInt(input.val().replace(/[٠-٩]/g, d => "٠١٢٣٤٥٦٧٨٩".indexOf(d)));
                updateCartItem(itemId, currentQuantity + 1);
            });

            $('#cart-items-container').on('click', '.quantity-minus', function() {
                var itemId = $(this).data('item-id');
                var input = $(this).siblings('.quantity-input');
                var currentQuantity = parseInt(input.val().replace(/[٠-٩]/g, d => "٠١٢٣٤٥٦٧٨٩".indexOf(d)));
                updateCartItem(itemId, currentQuantity - 1);
            });

            $('#cart-items-container').on('click', '.btn-remove', function() {
                var itemId = $(this).data('item-id');
                if (confirm('هل أنت متأكد من حذف هذا المنتج؟')) {
                    updateCartItem(itemId, 0);
                }
            });
        });
    </script>
}
