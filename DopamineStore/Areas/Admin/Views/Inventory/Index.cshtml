@model IEnumerable<Product>
@{
    ViewData["Title"] = "إدارة المخزون";
}

<div class="page-header">
    <h1>@ViewData["Title"]</h1>
</div>

<div class="content-card filter-card mb-4">
    <form asp-action="Index" method="get">
        <div class="row g-3 align-items-end">
            <div class="col-md-4">
                <label for="searchString" class="form-label">البحث بالاسم</label>
                <input type="text" class="form-control" name="searchString" value="@(ViewData["CurrentFilter"])">
            </div>
            <div class="col-md-3">
                <label for="categoryId" class="form-label">القسم</label>
                <select name="categoryId" class="form-select" asp-items="@(ViewData["Categories"] as SelectList)">
                    <option value="">كل الأقسام</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="stockLevel" class="form-label">حالة المخزون</label>
                <select name="stockLevel" class="form-select" asp-items="@(new SelectList(new[] { new { Value = "in_stock", Text = "متوفر" }, new { Value = "low_stock", Text = "مخزون منخفض" }, new { Value = "out_of_stock", Text = "نفذت الكمية" } }, "Value", "Text", ViewData["CurrentStockLevel"]))">
                    <option value="">الكل</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary w-100"><i class="fas fa-filter me-2"></i>تصفية</button>
            </div>
        </div>
    </form>
</div>

<div class="content-card product-table-card">
    <div class="table-responsive">
        <table class="table table-hover align-middle professional-table">
            <thead>
                <tr>
                    <th class="p-3">المنتج</th>
                    <th class="p-3">القسم</th>
                    <th class="p-3">حالة المخزون</th>
                    <th class="p-3" style="width: 220px;">الكمية الحالية</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="p-3">
                            <div class="product-cell">
                                <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? "https://placehold.co/100x100/F4E1E6/A64B63?text=P" : item.ImageUrl)" />
                                <span class="product-name">@item.Name</span>
                            </div>
                        </td>
                        <td class="p-3">@item.Category?.Name</td>
                        <td class="p-3">
                            @if (item.StockQuantity == 0)
                            {
                                <span class="stock-status-badge stock-status-out-of-stock"><span class="dot"></span> نفذت الكمية</span>
                            }
                            else if (item.StockQuantity <= 5)
                            {
                                <span class="stock-status-badge stock-status-low-stock"><span class="dot"></span> مخزون منخفض</span>
                            }
                            else
                            {
                                <span class="stock-status-badge stock-status-in-stock"><span class="dot"></span> متوفر</span>
                            }
                        </td>
                        <td class="p-3">
                            <div class="update-stock-container d-flex align-items-center">
                                @Html.AntiForgeryToken()
                                <div class="input-group">
                                    <input type="number" class="form-control stock-quantity-input"
                                           name="quantity"
                                           value="@item.StockQuantity"
                                           data-product-id="@item.Id"
                                           min="0">
                                    <button class="btn btn-outline-success btn-update-stock"
                                            type="button"
                                            data-product-id="@item.Id"
                                            style="display:none;"
                                            title="حفظ الكمية الجديدة">
                                        <i class="fas fa-check"></i>
                                    </button>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            document.querySelectorAll('.stock-quantity-input').forEach(input => {
                const originalValue = input.value;
                input.addEventListener('input', function() {
                    const saveButton = this.closest('.input-group').querySelector('.btn-update-stock');
                    if (this.value !== originalValue) {
                        saveButton.style.display = 'inline-block';
                    } else {
                        saveButton.style.display = 'none';
                    }
                });
            });

            document.querySelectorAll('.btn-update-stock').forEach(button => {
                button.addEventListener('click', function() {
                    const productId = this.dataset.productId;
                    const container = this.closest('.update-stock-container');
                    const input = container.querySelector('.stock-quantity-input');
                    const newQuantity = input.value;
                    const token = container.querySelector('input[name="__RequestVerificationToken"]').value;
                    const saveButton = this;

                    saveButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>';
                    saveButton.disabled = true;

                    fetch('/Admin/Inventory/UpdateStock', { 
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'RequestVerificationToken': token
                        },
                        body: `productId=${productId}&quantity=${newQuantity}`
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            saveButton.style.display = 'none';
                        } else {
                            alert(data.message || 'حدث خطأ أثناء حفظ البيانات.');
                            input.value = data.oldQuantity; 
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('فشل الاتصال بالخادم.');
                    })
                    .finally(() => {
                        saveButton.innerHTML = '<i class="fas fa-check"></i>';
                        saveButton.disabled = false;
                    });
                });
            });
        });
    </script>
}

